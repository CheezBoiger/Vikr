TODO List for the Vikr Renderer Engine.

Legend:
[X] = Completed.
[$] = Working on.
[C] = Cancelled.
                                                                             
- Experimental, Try to lean towards Data Oriented Design.                                       
- Mathematics!                                                                                        
  - Implement Linear Algebra Commonality toolsets.                                                   
  - Need Vector4, 3, 2, and Matrix4, 3, 2, 1.                                                        
  - Translation, Rotation, Scale, Shear.
  - Cross and dot product
  - Lerp
  - Quaternions
    - Slerp
    - Euler Angles
 
- Renderer Engine
  - Light rendering model (blinn-phong for now.)
    
    - Deferred Lighting!
      - G-Buffer (OpenGL for now)
    - Requiring the use of FrameBuffers!

  - OpenGL and Vulkan Implementations
    - Start with OpenGL FIRST!! Wrapping.
    - Mesh and Model Objects.
      - Model is deprecated! Replacing with SceneObject and Scene.
      - Mesh needs to be abstracted!
    - graphics commands.
      - Render Command
        - MeshCommand(Render mesh)
        - Primitive Command (Rendering 2D objects like triangles and lines)
        - Group Command (for grouped commands to use)
        - Custom Command (for custom commands)
    - Bump and Parallax Mapping
      - Integrate Tangents and Bitangets into our Vertex object
      - Calculate tangents and bitangents.
    - Render Target! for Post processing!
      - Figure out how to make it easier to use for Targetting specific Meshes
      - Render Queue
        - Use an unordered_map to store key (RenderTarget *) with value (std::vector<RenderCommand>)?
        - Should be able to push back Deferred commands to render after (this is a post-batch render).
    - Shader Class
      - I want to implement a Shader Preprocessor for #include (GLSL omits this for GOOD reasons)            [X]
    - Shader Compiler implementation
      - Ease of use for Shader programming.
      - Parser for compiling shaders.                                                                        [X]
    - Camera and free movement! // Abstract Camera needed.                                                   [X]
      - Quaternion based!                                                                                    [X]
    - Lighting and shading model
      - Blinn-Phong shading.
      - G-Buffer required
    - Implement the Framebuffer for the rendering pipeline.
    - Work on Scene graph for pushing commands with!

- Vikr Filesystem!  
  - Implement Filesystem handling for Folders/Directories of the Operating system.
    - Windows (WIN32 NAT)
    - Linux
    - OS X (I dunno, can't test it :c )
  - Require Shader/Resource directory for better handling with our Vikr Editor in the future.

FUTURE WORKS
- Animation! // Most likely
  - Mesh Skinning and Skeletons
  - Develop bone heiarchy 
- Audio (Optional!)
  - OpenAL
- Skew-Symmetric Matrix is rather a toughy, but worth researching more.
- Moving to Physically Based Rendering (PBR)
  - This is going to be in the future!


EOF